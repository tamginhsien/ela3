<resources>
    <!-- Main Menu -->
    <string name="app_name">ELA</string>
    <string name="TextViewTitle1">Welcome to</string>
    <string name="TextViewTitle2"><![CDATA[E-Learning On Arduino & Its Applications]]></string>
    <string name="buttonSubmenu1">INTRO</string>
    <string name="buttonSubmenu2">COMPARISON</string>
    <string name="buttonSubmenu3">APPLICATION</string>
    <string name="title_activity_menu2">MainActivity</string>
    <string name="buttonSubmenu4">ABOUT THE APP</string>


    <!-- Submenu 1: Introduction of Arduino -->
    <string name="textviewSubmenu1_1"><b>1. What is Arduino?</b>
        \n\n Basically, <b>Arduino</b> is an electronic platform that available on both software
        (Arduino IDE) and hardware (Arduino Board). It is open-source and it operated by giving
        instructions (which written with Arduino IDE) to microcontroller of the Arduino board.
        \n\n\t <u>Arduino original inventors:</u>
        \n <b>Massimo Banzi</b> and <b>David Cuartielles</b> at the
        <b>Interaction Design Institute Ivrea (Ivrea, Italy)</b> in 2005.
        \n Arduino software (IDE) was created by <b>David Mellis</b>;
        Inventors joined later:
        \n <b>Gianluca Martino</b> and <b>Tom Igoe</b> </string>
    <string name="textviewSubmenu1_1_1">
        \n<b>2.  Arduino Hardware (Arduino Board)</b>\n
        \n Arduino Board is an electronic circuit board which embedded with microcontroller which
        it can be used to read inputs (such as light received by light sensors, finger triggered on
        button) and produce outputs (such as turn on LED, activate motor).
        \n Usually it used in electronic project as a main component to control its whole activity. \n
        \n\n <b>Popular types of Arduino boards:</b> \n</string>
    <string name="arduinounor3">arduino_unor3</string>
    <string name="arduino_uno_r3">arduino_unor3</string>
    <string name="arduino_uno_textview1"><b>Arduino UNO R3</b>
        \n Suggested Link to buy:
        \n <a href="https://store.arduino.cc/usa/arduino-uno-rev3">[Arduino Official]</a>
        \n [Cytron Malaysia]
        \n <a href="https://my.cytron.io/p-starter-kit-for-arduino-uno">[Starter Kit]</a>
        \n <a href="https://my.cytron.io/p-arduino-uno-rev3-main-board">[Board]</a>
        \n [Shopee]
        \n <a href="https://shopee.com.my/product/33091591/466533399?smtt=0.19388095-1637001249.3">[Board]</a>
        \n</string>
    <string name="arduino_mega">arduino_mega</string>
    <string name="arduino_mega_textview"> <b>Arduino MEGA 2560 R3</b>
        \n Suggested Link to buy:
        \n <a href="https://store.arduino.cc/usa/mega-2560-r3">[Arduino Official]</a>
        \n [Cytron Malaysia]
        \n <a href="https://my.cytron.io/p-arduino-mega-2560-r3-main-board">[Board]</a>
        \n [Shopee]
        \n <a href="https://shopee.com.my/product/126211897/1919705808?smtt=0.19388095-1637001788.3.">[Board]</a>
        \n</string>
    <string name="arduino_nano">arduino_nano</string>
    <string name="arduino_nano_textview"> <b>Arduino NANO</b>
        \n Suggested Link to buy:
        \n <a href="https://store.arduino.cc/usa/arduino-nano">[Arduino Official]</a>
        \n [Cytron Malaysia]
        \n <a href="https://my.cytron.io/p-arduino-nano-main-board">[Main Board]</a>
        \n [Shopee]
        \n <a href="https://shopee.com.my/product/33287405/461918182?smtt=0.19388095-1638635369.3">[Board]</a>
        \n</string>
    <string name="arduino_leonardo">arduino_leonardo</string>
    <string name="arduino_leonardo_textview"> <b>Arduino Leonardo</b>
    \n Suggested Link to buy:
        \n <a href="https://store.arduino.cc/usa/leonardo">[Arduino Official]</a> \n</string>

    <!-- Arduino IDE -->
    <string name="textviewSubmenu1.3">\n <b>3.  Arduino Software (Arduino IDE)</b>\n </string>
    <string name="arduino_ide">arduino ide</string>
    <string name="arduino_ide_textview1">The implementation of Arduino software, Arduino IDE is used to
    give command Arduino board by coding in Arduino programming language. It can connect to Arduino
    hardware (Arduino board) \n
        \n\n <u>Arduino IDE Download Links:</u> \n (About 200MB) \n\n </string>
    <!-- Arduino IDE button here -->
    <string name="arduino_ide_textview2">

    \n\n <b>Guidance Video:</b>
        \n <u>Arduino IDE Download Video:</u> \n\n </string>
    <!-- Download video button here -->
    <string name="arduino_ide_textview3">
        \n\n <u>Set HEX files location video guide:</u> \n\n </string>
    <!-- HEX files location video button here -->
    <string name="arduino_ide_textview4">
        \n\n <u>Video how to implement Arduino code to Proteus (with HEX files):</u> \n\n </string>
    <!-- Video button here -->

    <!-- Schematic Diagram Software -->
    <string name="textviewSubmenu1.4.1">
    \n\n <u><b>Schematic Diagram Software:</b></u>
        \n\n <u>Proteus Professional</u>
        \n Official Download Links: \n\n </string>
    <string name="crack_proteus1">
        \n\n Crack (Alternatives) Download Links: \n\n  </string>
    <string name="crack_proteus2">
        \n\n <u>Crack Installation Guide Video:</u> \n\n  </string>
    <string name="no_library">
        \n\n\n <u>If no Library Found in Proteus:</u> \n\n </string>
    <string name="arduino_library1">
        \n\n\n Arduino Library of Proteus: \n\n  </string>
    <string name="arduino_library2">
        \n\n <u>Installation Video of Adding Arduino Library into Proteus:</u> \n\n </string>
    <string name="KiCAD">
        \n\n\n <u>KiCAD</u>
        \n (About 1.2GB)
        \n Download Links: \n\n  </string>

    <!-- Wiring Connection Software -->
    <string name="textviewSubmenu1.5">
    \n\n <u><b>Wiring Connection Software:</b></u>
    \n\n <u>Fritzing</u>
        \n (About 180MB)
        \n Official (Not Free): \n </string>
    <string name="crack_fritzing">
        \n Free (Version 0.9.3b.32.pc): \n  </string>
    <string name="virtualbreadboard">
        \n\n <u>Virtual Breadboard</u>
        \n (About 152MB)
        \n Official (Free, Windows): \n
    </string>


    <!-- Submenu 2: Comparison of Different Types of Arduino -->
    <string name="buttonSubmenu2_1">Arduino MEGA</string>
    <string name="buttonSubmenu2_2">Arduino UNO</string>
    <string name="buttonSubmenu2_3">Arduino NANO</string>

    <!-- Submenu 2.1: Arduino MEGA -->
    <string name="pins_arduino_mega">pins_arduino_mega</string>
    <string name="textviewSubmenu2_1_1">\n <b>Specification and Manual :</b> </string>
    <string name="textviewSubmenu2_1_2">
        - <a href="https://create.arduino.cc/projecthub/Hack-star-Arduino/learn-arduino-port-manipulation-2022-10f">Learn Arduino Port Manipulation - 2022</a>
        \n - <a href="https://create.arduino.cc/projecthub/danut-leon-zup/ethernet-arduino-lcd-interface-to-node-red-t">Ethernet Arduino LCD Interface to Node Red Thermostat BMP180</a>
        \n - <a href="https://create.arduino.cc/projecthub/seeyouu/lcd-with-ds3231-real-time-clock-module-402344">LCD with DS3231: Real Time Clock Module</a>
        \n - <a href="https://create.arduino.cc/projecthub/theottermaster/pinwheel-twister-e5f91d">Pinwheel Twister</a>
        \n - <a href="https://create.arduino.cc/projecthub/surendarsaravana/smart-dustbin-b92162">Smart Dustbin</a>
        \n - <a href="https://create.arduino.cc/projecthub/javagoza/mega-2560-touch-breakout-game-425337">Mega 2560 Touch Breakout Game</a>
        \n - <a href="https://create.arduino.cc/projecthub/Sergey_Urusov/arduino-mega-chess-d54383">Arduino MEGA Chess</a>
    </string>

    <!-- Submenu 2.2: Arduino UNO -->
    <string name="pins_arduino_uno">pins_arduino_uno</string>
    <string name="textviewSubmenu2_2_1">\n <b>Specification and Manual :</b> </string>
    <!-- \n\n <b>Digital Pins:</b>
    \n <u>Serial Communication :</u>
        \n \t Connected to correspond pins
        \n\t (FTDI USB-to-TTL Serial Chip).
        \n \t a) Pin 0 (RX): Used to receive (RX) TTL serial data.
        \n \t b) Pin 1 (TX): Used to transmit (TX) TTL serial data. \n
    \n <u>External Interrupts :</u> Pin 2, Pin 3
        \n \t Configured to trigger an external interrupt by providing LOW value,
        Rising Edge / Falling Edge /changing of value.
        \n \t Function "attachinterrupt()" = https://www.arduino.cc/reference/en/language/functions/external-interrupts/attachinterrupt/ \n
    \n <u>PWM output :</u> Pin 3, 5, 6, 9, 10, 11
        \n \t Configured to provide 8-bit PWM output with "analog()" function.
        \n \t Board with Microcontroller [ATmega8]: Available for Pin 9, Pin 10, Pin 11 only. \n
    \n <u>BT Reset :</u> Pin 7
        \n \t [Arduino BT ONLY] Implemented connection to RESET of bluetooth module. \n
    \n <u>SPI :</u> Pin 10 | SS : Pin 11 | MISO : Pin 12 | SCK : Pin 13
        \n \t SPI (Serial Peripheral Interface): These pins provide SPI communication with assistance
        of SPI library.AREF (Analog Reference). [Currently not included in Arduino language] \n
    \n <u>LED :</u> Pin 13
        \n \t Pin Value = HIGH, LED ON.
        \n \t Pin Value = LOW, LED OFF. \n
    \n\n <b>Analog Pins:</b>
        \n \t Pin A0, A1, A2, A3, A4, A5:
        \n \t Configured to provide analog input (Range: 0-5 V).
                Allowed to used as digital pins (Pin A0-A5 = Pin A14-A19). \n
        \n \t A4(SDA) and A5(SCA) : Can be configured for TWI Communication
        \n (with Wire library = http://wiring.org.co/reference/libraries/Wire/index.html) \n
    \n\n <b>Power Pins: </b>
        \n \t Vin : Configured for external power source to have input voltage to Arduino board
        \n \t 5V : Configured to regulated power supply (DC) to power microcontroller (ATMega)
        and other components.
        \n \t 3.3V : Configured to give supply (maximum current draw=50mA) that generated by
        on-board voltage regulator.
        \n \t GND : Ground Pins.
    \n \t RESET Pin: Reset microcontroller by set this line to LOW.
    \n \t AREF Pin: Reference voltage for analog inputs and used with "analogReference()"
        [https://www.arduino.cc/reference/en/language/functions/analog-io/analogreference/]
    \n\n <b>DC Power Jack: \n </b> Connected to give external DC power supply. (9-12 V)
    \n <b>USB Port:</b>
    \n 1) Used for uploading sketches (coding) to Arduino IDE (Computer) to Arduino board.
    \n 2) Used for Serial Communication between computer and board.
    \n 3) Used for powering the board.
    \n\n <b>Specification of Microcontroller, ATmega328P :</b>
    \n Digital I/O Pins : 14 (6 is PWM Output)
    \n Analog Input Pins : 6 (DIP)
    \n DC Current per I/O Pin : 40 mA
    \n Flash Memory : 32 kB
    \n SRAM : 2 KB
    \n EEPROM: 1 KB
    \n\n Manual: \n [https://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061B.pdf]
    </string> -->
    <string name="textviewSubmenu2_2_2">
         - <a href="https://www.makeuseof.com/tag/make-buzz-wire-game-arduino/">Make a Buzz Wire Game with an Arduino</a>
        \n - <a href="https://www.makeuseof.com/tag/make-midi-controller-arduino/">Arduino MIDI Controller</a>
        \n - <a href="https://create.arduino.cc/projecthub/muhammedazhar/make-your-first-arduino-robot-the-best-be">Arduino Robot</a>
        \n - <a href="https://create.arduino.cc/projecthub/muhammed-shameel-k-v/simple-obstacle-sensor-with-ardui">Simple Obstacle Basic</a>
        \n - <a href="https://create.arduino.cc/projecthub/circuito-io-team/giftduino-the-perfect-arduino-gift-box-67083">Perfect Arduino Gift Box</a>
        \n - <a href="https://create.arduino.cc/projecthub/SBR/working-with-shift-register-22902c">Working with Shift Register</a>
    </string>

    <!-- Submenu 2.3: Arduino NANO -->
    <string name="pins_arduino_nano">pins_arduino_nano</string>
    <string name="textviewSubmenu2_3_1">\n <b>Specification and Manual :</b> </string>
    <string name="textviewSubmenu2_3_2">
         - <a href="https://create.arduino.cc/projecthub/kutluhan-aktar/nano-weather-shield-v1-1-f65b7a">NANO Weather Sheild V1.1</a>
        \n - <a href="https://create.arduino.cc/projecthub/xing-hackweek/formula-led-b4cd78">Formula LED</a>
        \n - <a href="https://create.arduino.cc/projecthub/TheTNR/smart-coffee-table-with-nano-and-hx711-0a0f0e">Smart Coffee Table with NANO and HX711</a>
        \n - <a href="https://create.arduino.cc/projecthub/Niranjan_niru/find-me-deb4a8">Item Locator with Arduino NANO</a>
        \n - <a href="https://create.arduino.cc/projecthub/suhail_jr/ir-remote-controlled-home-automation-629106">IR Remote Controlled Home Automation</a>
        \n - <a href="https://create.arduino.cc/projecthub/suhail_jr/ir-remote-controlled-home-automation-629106">Ultrasonic Tripwire</a>
    </string>



    <!-- Submenu 3: Application of Arduino -->
    <string name="buttonSubmenu3_1">Examples of \n <b>ARDUINO MEGA</b> </string>
    <string name="buttonSubmenu3_2">Examples of \n <b>ARDUINO UNO</b></string>
    <string name="buttonSubmenu3_3">Examples of \n <b>ARDUINO NANO</b></string>

    <!-- Submenu 3.1: Examples of Arduino MEGA -->
    <!-- Example 1 -->
    <string name="textviewSubmenu3_1_1">1. Capacitive Resistor Piano\n\n Coding (Arduino IDE):</string>
    <string name="textviewCoding3_1_1">
<!--       <![CDATA[-->
<!--    \n // Import the CapacitiveSensor Library.-->
<!--    \n #include <CapacitiveSensor.h>-->
<!--    \n-->
<!--    \n-->
<!--    \n #define speaker 11-->
<!--    \n-->
<!--    \n-->
<!--    \n// Set the Send Pin & Receive Pin.-->
<!--    \nCapacitiveSensor   cs_2_3 = CapacitiveSensor(2,3);-->
<!--    \nCapacitiveSensor   cs_2_4 = CapacitiveSensor(2,4);-->
<!--    \nCapacitiveSensor   cs_2_5 = CapacitiveSensor(2,5);-->
<!--    \nCapacitiveSensor   cs_2_6 = CapacitiveSensor(2,6);-->
<!--    \nCapacitiveSensor   cs_2_7 = CapacitiveSensor(2,7);-->
<!--    \nCapacitiveSensor   cs_2_8 = CapacitiveSensor(2,8);-->
<!--    \nCapacitiveSensor   cs_2_9 = CapacitiveSensor(2,9);-->
<!--    \nCapacitiveSensor   cs_2_10 = CapacitiveSensor(2,10);-->
<!--    \n-->
<!--    \n-->
<!--    \n void setup()-->
<!--    \n {-->
<!--    \n  cs_2_6.set_CS_AutocaL_Millis(0xFFFFFFFF);     // turn off autocalibrate on channel 1-->
<!--    \n-->
<!--    \n  // Arduino start communicate with computer.-->
<!--    \n  Serial.begin(9600);-->
<!--    \n}-->
<!--    \n-->
<!--    \n void loop()-->
<!--    \n {-->
<!--    \n  // Set a timer.-->
<!--    \n  long start = millis();-->
<!--    \n-->
<!--    \n  // Set the sensitivity of the sensors.-->
<!--    \n  long total1 =  cs_2_3.capacitiveSensor(3000);-->
<!--    \n  long total2 =  cs_2_4.capacitiveSensor(3000);-->
<!--    \n  long total3 =  cs_2_5.capacitiveSensor(3000);-->
<!--    \n  long total4 =  cs_2_6.capacitiveSensor(3000);-->
<!--    \n  long total5 =  cs_2_7.capacitiveSensor(3000);-->
<!--    \n  long total6 =  cs_2_8.capacitiveSensor(3000);-->
<!--    \n  long total7 =  cs_2_9.capacitiveSensor(3000);-->
<!--    \n  long total8 =  cs_2_10.capacitiveSensor(3000);-->
<!--    \n-->
<!--    \n-->
<!--    \n  Serial.print(millis() - start);        // check on performance in milliseconds-->
<!--    \n  Serial.print("\t");                    // tab character for debug window spacing-->
<!--    \n-->
<!--    \n  Serial.print(total1);                  // print sensor output 1-->
<!--    \n  Serial.print("\t");                    // Leave some space before print the next output-->
<!--    \n  Serial.print(total2);                  // print sensor output 2-->
<!--    \n  Serial.print("\t");                    // Leave some space before print the next output-->
<!--    \n  Serial.print(total3);                  // print sensor output 3-->
<!--    \n  Serial.print("\t");                    // Leave some space before print the next output-->
<!--    \n  Serial.print(total4);                  // print sensor output 4-->
<!--    \n  Serial.print("\t");                    // Leave some space before print the next output-->
<!--    \n  Serial.print(total5);                  // print sensor output 5-->
<!--    \n  Serial.print("\t");                    // Leave some space before print the next output-->
<!--    \n  Serial.print(total6);                  // print sensor output 6-->
<!--    \n  Serial.print("\t");                    // Leave some space before print the next output-->
<!--    \n  Serial.print(total7);                   // print sensor output 7-->
<!--    \n                                          // Leave some space before print the next output-->
<!--    \n  Serial.print("\t");-->
<!--    \n  Serial.println(total8);                 // print sensor output 8-->
<!--    \n                                         // "println" - "ln" represent as "line", system will jump to next line after print the output.-->
<!--    \n-->
<!--    \n-->
<!--    \n  // When hand is touched the sensor, the speaker will produce a tone.-->
<!--    \n  // Threshold is set so that the sensor won't be too sensitive.-->
<!--    \n  if (total1 > 500) tone(speaker,131);   // frequency-->
<!--    \n  if (total2 > 500) tone(speaker,147);   // you can see https://www.arduino.cc/en/Tutorial/toneMelody if you want to change frequency-->
<!--    \n  if (total3 > 500) tone(speaker,165);-->
<!--    \n  if (total4 > 500) tone(speaker,175);-->
<!--    \n  if (total5 > 500) tone(speaker,196);-->
<!--    \n  if (total6 > 500) tone(speaker,220);-->
<!--    \n  if (total7 > 500) tone(speaker,247);-->
<!--    \n  if (total8 > 500) tone(speaker,262);-->
<!--    \n-->
<!--    \n  // When hand didn't touch on it, no tone is produced.-->
<!--    \n  if (total1<=500  \&  total2<=500  \&  total3<=500 \& total4<=500  \&  total5<=500  \&  total6<=500 \&  total7<=500 \& total8<=500)-->
<!--    \n    noTone(speaker);-->
<!--    \n-->
<!--    \n  delay(10);                             // arbitrary delay to limit data to serial port-->
<!--    \n}-->
<!--    ]]>-->
    </string>
    <string name="textviewSubmenu3_1_2">Schematic Diagram (Proteus)</string>
    <string name="schematic_examples3_1_1">Schematic_of_Capacitive_Resistor</string>
    <string name="textviewSubmenu3_1_3">Wiring Connection (Fritzing / Virtual Breadboard): </string>
    <string name="connection_examples_3_1_1">connection_examples_3_1_1</string>
    <string name="textviewSubmenu3_1_4">\n Video Demonstration:</string>
    <string name="video_example_1">Example 1 Video</string>

    <!-- Example 2 -->
    <string name="textviewSubmenu3_1_5">2. Example 2
    \n Coding [Arduino IDE]</string>
    <string name="textViewCoding3_1_2">[Coding put here]</string>
    <string name="textviewSubmenu3_1_6">Schematic Diagram (Proteus)</string>
    <string name="schematic_examples3_1_2">Schematic_of_Capacitive_Resistor</string>
    <string name="textviewSubmenu3_1_7">Wiring Connection (Fritzing / Virtual Breadboard): </string>
    <string name="connection_examples_3_1_2">connection_examples_3_1_2</string>
    <string name="textviewSubmenu3_1_8">\n Video Demonstration:</string>
    <string name="video_example_2">Example 2 Video</string>

    <!-- Example 3 -->
    <string name="textviewSubmenu3_1_9">3. Example 3
    \n Coding [Arduino IDE]</string>
    <string name="textViewCoding3_1_3">[Coding put here]</string>
    <string name="textviewSubmenu3_1_10">Schematic Diagram (Proteus)</string>
    <string name="schematic_examples3_1_3">Schematic_of_Capacitive_Resistor</string>
    <string name="textviewSubmenu3_1_11">Wiring Connection (Fritzing / Virtual Breadboard): </string>
    <string name="connection_examples_3_1_3">connection_examples_3_1_3</string>
    <string name="textviewSubmenu3_1_12">\n Video Demonstration:</string>
    <string name="video_example_3">Example 3 Video</string>

    <!-- Comment Button String -->
    <string name="comment_example_1">Comment (Example 1)</string>
    <string name="comment_example_2">Comment (Example 2)</string>
    <string name="comment_example_3">Comment (Example 3)</string>
    <string name="comment_example_4">Comment (Example 4)</string>
    <string name="comment_example_5">Comment (Example 5)</string>
    <string name="comment_example_6">Comment (Example 6)</string>
    <string name="comment_example_7">Comment (Example 7)</string>
    <string name="comment_example_8">Comment (Example 8)</string>
    <string name="comment_example_9">Comment (Example 9)</string>
    <!-- Comment Feature 1
    <string name="send_button1">Comment</string>
    <string name="hint_enter_comment1">Pls Enter Comments</string>
    <string name="rec_comment1">Comment \n\n\n</string> -->


    <!-- Submenu 3.2: Examples of Arduino UNO -->

    <!-- Example 4 -->
    <string name="textviewSubmenu3_2_1"> <u>Components needed:</u> \n- Arduino UNO R3 *1 \n- Breadboard *1 \n- General Purpose Transistor NPN *1
    \n- LED light bulb *1 \n- 1k ohm Resistor *2 \n- Jumper Wires *1 \n- 5V Power Source (Powerbank, laptop port of battery)
    \n\n <u>Software needed :</u> \n Arduino IDE, Proteus (Schematic Diagram), Fritzing / Virtual Breadboard (Wiring Diagram).
    \n\n <u>Coding</u> (Arduino IDE): \n</string>
    <string name="textviewCoding3_2_1">
        const int transnpn = 2;

        \n\n void setup()
        \n {
        \n pinMode (transnpn, OUTPUT);
        \n}

        \n\n void loop()
        \n   {
        \n digitalWrite (transnpn, HIGH);
        \n delay(1500);
        \n digitalWrite (transnpn, LOW);
        \n delay(1500);
        \n }
    </string>
    <string name="textviewSubmenu3_2_2"> \n <u>Schematic Diagram</u> (Proteus):</string>
    <string name="schematic_examples3_2_1">Schematic_of_Blinking_with_Transistor</string>
    <string name="textviewSubmenu3_2_3">\n <u>Wiring Connection (Fritzing / Virtual Breadboard):</u></string>
    <string name="connection_examples_3_2_1">connection_examples_3_2_1</string>
    <string name="textviewSubmenu3_2_4">\n\n <u>Video Demonstration:</u> </string>
    <string name="video_example_4">Example 4 Video</string>
    <!-- Comment Feature 4
    <string name="send_button4">Comment</string>
    <string name="hint_enter_comment4">Pls type in Comments</string>
    <string name="rec_comment4">-Comment- \n\n\n</string> -->

    <!-- 5th Example -->
    <string name="textviewSubmenu3_2_5"> <u>Components Needed:</u> \n- Arduino UNO R3 *1 \n- Breadboard *1 \n- 7-Segment Display (3461BS-1, 6 pins) *1
    \n- Jumper Wire *11 \n- 5V Power Source (Powerbank, laptop port or battery)
    \n\n <u>Software Needed:</u> \n Arduino IDE, Proteus (Schematic Diagram), Fritzing / Virtual Breadboard (Wiring Diagram)
    \n\n <u>Coding</u> (Arduino IDE): \n</string>
    <string name="textviewCoding3_2_2">
        <![CDATA[
    \n /*
    \n Showing number 0-9 on a Common Anode 7-segment LED display
    \n Displays the numbers 0-9 on the display, with one second in between.
    \n // Pin 2-8 is connected to the 7 segments of the display.
    \n
    \n int pinA = 2;
    \n int pinB = 3;
    \n int pinC = 4;
    \n int pinD = 5;
    \n int pinE = 6;
    \n int pinF = 7;
    \n int pinG = 8;
    \n int D1 = 9;
    \n int D2 = 10;
    \n int D3 = 11;
    \n int D4 = 12;
    \n
    \n // the setup routine runs once when you press reset:
    \n
    \n  void setup() {
    \n  // initialize the digital pins as outputs.
    \n  pinMode(pinA, OUTPUT);
    \n  pinMode(pinB, OUTPUT);
    \n  pinMode(pinC, OUTPUT);
    \n  pinMode(pinD, OUTPUT);
    \n  pinMode(pinE, OUTPUT);
    \n  pinMode(pinF, OUTPUT);
    \n  pinMode(pinG, OUTPUT);
    \n  pinMode(D1, OUTPUT);
    \n  pinMode(D2, OUTPUT);
    \n  pinMode(D3, OUTPUT);
    \n  pinMode(D4, OUTPUT);
    \n  }
    \n
    \n //In the cases of digit to display (from 0 – 9), HIGH means the Display OFF, LOW means Display ON
    \n
    \n void loop() {
    \n  //First Digit
    \n  digitalWrite(D1, HIGH);
    \n  digitalWrite(D2, LOW);
    \n  digitalWrite(D3, LOW);
    \n  digitalWrite(D4, LOW);
    \n  //0
    \n  digitalWrite(pinA, LOW);
    \n  digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, LOW);
    \n  digitalWrite(pinE, LOW);
    \n  digitalWrite(pinF, LOW);
    \n  digitalWrite(pinG, HIGH);
    \n  delay(1000);               // wait for a second
    \n
    \n  //Second Digit
    \n  digitalWrite(D1, LOW);
    \n  digitalWrite(D2, HIGH);
    \n  digitalWrite(D3, LOW);
    \n  digitalWrite(D4, LOW);
    \n  //1
    \n  digitalWrite(pinA, HIGH);
    \n  digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, HIGH);
    \n  digitalWrite(pinE, HIGH);
    \n  digitalWrite(pinF, HIGH);
    \n  digitalWrite(pinG, HIGH);
    \n  delay(1000);               // wait for a second
    \n
    \n  //Third Digit
    \n  digitalWrite(D1, LOW);
    \n  digitalWrite(D2, LOW);
    \n  digitalWrite(D3, HIGH);
    \n  digitalWrite(D4, LOW);
    \n  //2
    \n  digitalWrite(pinA, LOW);
    \n  digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, HIGH);
    \n  digitalWrite(pinD, LOW);
    \n  digitalWrite(pinE, LOW);
    \n  digitalWrite(pinF, HIGH);
    \n  digitalWrite(pinG, LOW);
    \n  delay(1000);               // wait for a second
    \n
    \n  //Fourth Digit
    \n  digitalWrite(D1, LOW);
    \n  digitalWrite(D2, LOW);
    \n  digitalWrite(D3, LOW);
    \n  digitalWrite(D4, HIGH);
    \n  //3
    \n  digitalWrite(pinA, LOW);
    \n  digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, LOW);
    \n  digitalWrite(pinE, HIGH);
    \n  digitalWrite(pinF, HIGH);
    \n  digitalWrite(pinG, LOW);
    \n  delay(1000);               // wait for a second
    \n
    \n  //All Digit
    \n  digitalWrite(D1, HIGH);
    \n  digitalWrite(D2, HIGH);
    \n  digitalWrite(D3, HIGH);
    \n  digitalWrite(D4, HIGH);
    \n
    \n  //4
    \n  digitalWrite(pinA, HIGH);
    \n  digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, HIGH);
    \n  digitalWrite(pinE, HIGH);
    \n  digitalWrite(pinF, LOW);
    \n  digitalWrite(pinG, LOW);
    \n  delay(1000);               // wait for a second
    \n
    \n  //5
    \n  digitalWrite(pinA, LOW);
    \n  digitalWrite(pinB, HIGH);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, LOW);
    \n  digitalWrite(pinE, HIGH);
    \n  digitalWrite(pinF, LOW);
    \n  digitalWrite(pinG, LOW);
    \n  delay(1000);               // wait for a second
    \n
    \n  //6
    \n  digitalWrite(pinA, LOW);
    \n  digitalWrite(pinB, HIGH);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, LOW);
    \n  digitalWrite(pinE, LOW);
    \n  digitalWrite(pinF, LOW);
    \n  digitalWrite(pinG, LOW);
    \n  delay(1000);               // wait for a second
    \n
    \n  //7
    \n  digitalWrite(pinA, LOW);
    \n  digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, HIGH);
    \n  digitalWrite(pinE, HIGH);
    \n  digitalWrite(pinF, HIGH);
    \n  digitalWrite(pinG, HIGH);
    \n  delay(1000);               // wait for a second
    \n
    \n
    \n /*
    \n //8
    \n  digitalWrite(pinA, LOW);
    \n digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, LOW);
    \n  digitalWrite(pinE, LOW);
    \n  digitalWrite(pinF, LOW);
    \n  digitalWrite(pinG, LOW);
    \n
    \n
    \n  //9
    \n  digitalWrite(pinA, LOW);
    \n  digitalWrite(pinB, LOW);
    \n  digitalWrite(pinC, LOW);
    \n  digitalWrite(pinD, HIGH);
    \n  digitalWrite(pinE, HIGH);
    \n  digitalWrite(pinF, LOW);
    \n  digitalWrite(pinG, LOW);
    \n */
    \n
    \n }
    ]]>
    </string>
    <string name="textviewSubmenu3_2_6">\n <u>Schematic Diagram</u> (Proteus):</string>
    <string name="schematic_examples3_2_2">Schematic_of_4 Digit 7 Segment LED Display</string>
    <string name="textviewSubmenu3_2_7">\n <u>Wiring Connection (Fritzing / Virtual Breadboard):</u></string>
    <string name="connection_examples_3_2_2">connection_examples_3_2_2</string>
    <string name="textviewSubmenu3_2_8">\n <u>Video Demonstration:</u></string>
    <string name="video_example_5">Example 5 Video</string>

    <!-- 6th Example -->
    <string name="textviewSubmenu3_2_9"> <u>Components Needed:</u> \n- Arduino UNO R3 *1 \n- Breadboard *1 \n- Servo Motor *1
    \n- Jumper Wire *7 \n- 5V Power Source (Powerbank, laptop port or battery)
    \n\n <u>Software Needed:</u> \n Arduino IDE, Proteus (Schematic Diagram), Fritzing / Virtual Breadboard (Wiring Diagram)
    \n\n <u>Coding</u> (Arduino IDE): \n</string>
    <string name="textviewCoding3_2_3"><![CDATA[
    #include <Servo.h>
    \n
    \n int sensorPin = A0;
    \n int servoPin  = 9;
    \n
    \n int sensorValue = 0;
    \n int servoGrad = 90;
    \n int tolerance = 40;
    \n
    \n Servo myservo;
    \n
    \n void setup() {
    \n   pinMode( sensorPin, INPUT);
    \n   myservo.attach( servoPin );
    \n   myservo.write( servoGrad );
    \n }
    \n
    \n void loop() {
    \n   sensorValue = analogRead(sensorPin);
    \n   if ( sensorValue < (512-tolerance) )
    \n   {
    \n   if (servoGrad < 180) servoGrad++;
    \n   }
    \n
    \n  if ( sensorValue > (512+tolerance) )
    \n  {
    \n    if (servoGrad > 0) servoGrad—;
    \n  }
    \n
    \n  myservo.write( servoGrad );
    \n
    \n  delay(100);
    \n }
    \n
    ]]></string>
    <string name="textviewSubmenu3_2_10">\n <u>Schematic Diagram</u> (Proteus):</string>
    <string name="schematic_examples3_2_3">Schematic_of_4 Digit 7 Segment LED Display</string>
    <string name="textviewSubmenu3_2_11">\n <u>Wiring Connection (Fritzing / Virtual Breadboard):</u></string>
    <string name="connection_examples_3_2_3">connection_examples_3_2_2</string>
    <string name="textviewSubmenu3_2_12">\n <u>Video Demonstration:</u></string>
    <string name="video_example_6">Example 6 Video</string>

    <!-- TODO: Remove or change this placeholder text
    <string name="hello_blank_fragment">Hello blank fragment</string> -->

    <!-- Submenu 3.3: Examples of Arduino MEGA -->
    <!-- Example 7 -->
    <string name="textviewSubmenu3_3_1">1. Example 7
    \n Coding (Arduino IDE):</string>
    <string name="textViewCoding3_3_1">[Coding put here]</string>
    <string name="textviewSubmenu3_3_2">Schematic Diagram (Proteus)</string>
    <string name="schematic_examples3_3_1">Schematic_of_Capacitive_Resistor</string>
    <string name="textviewSubmenu3_3_3">Wiring Connection (Fritzing / Virtual Breadboard): </string>
    <string name="connection_examples_3_3_1">connection_examples_3_3_1</string>
    <string name="textviewSubmenu3_3_4">\n Video Demonstration:</string>
    <string name="video_example_7">Example 7 Video</string>

    <!-- Example 8 -->
    <string name="textviewSubmenu3_3_5">2. Example 8
    \n Coding [Arduino IDE]</string>
    <string name="textViewCoding3_3_2">[Coding put here]</string>
    <string name="textviewSubmenu3_3_6">Schematic Diagram (Proteus)</string>
    <string name="schematic_examples3_3_2">Schematic_of_Capacitive_Resistor</string>
    <string name="textviewSubmenu3_3_7">Wiring Connection (Fritzing / Virtual Breadboard): </string>
    <string name="connection_examples_3_3_2">connection_examples_3_3_2</string>
    <string name="textviewSubmenu3_3_8">\n Video Demonstration:</string>
    <string name="video_example_8">Example 8 Video</string>

    <!-- Example 9 -->
    <string name="textviewSubmenu3_3_9">3. Example 9
    \n Coding [Arduino IDE]</string>
    <string name="textViewCoding3_3_3">[Coding put here]</string>
    <string name="textviewSubmenu3_3_10">Schematic Diagram (Proteus)</string>
    <string name="schematic_examples3_3_3">Schematic_of_Capacitive_Resistor</string>
    <string name="textviewSubmenu3_3_11">Wiring Connection (Fritzing / Virtual Breadboard): </string>
    <string name="connection_examples_3_3_3">connection_examples_3_3_3</string>
    <string name="textviewSubmenu3_3_12">\n Video Demonstration:</string>
    <string name="video_example_9">Example 9 Video</string>

    <!-- About the App -->
    <string name="about_app_1">About the app</string>
    <string name="about_app_2">This Android based mobile application is developed by TAM GIN HSIEN
        for Final Year Project (FYP) in Universiti Tun Hussein Onn Malaysia (UTHM). </string>
    <string name="about_app_3">
    \n\n The importance of this application (ELA) is to:\n
    \n -\t  Give users on what Arduino (Arduino board and Arduino IDE) exactly is.
    \n -\t  Provide the Guide on how to simulate the Arduino project in Proteus.
    \n -\t  Provide the examples of Arduino project to users and Arduino beginners.
    \n -\t  Teach Arduino beginners on how to build an Arduino project.\n </string>
    <string name="about_app_4"><b>Manual of using this app</b></string>

</resources>